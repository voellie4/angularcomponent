{"ast":null,"code":"import _asyncToGenerator from \"C:/Development/AngularComponent/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction FetchDataComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FetchDataComponent_table_5_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const forecast_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.temperatureC);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.temperatureF);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.summary);\n  }\n}\nfunction FetchDataComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Temp. (C)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Temp. (F)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Summary\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, FetchDataComponent_table_5_tr_12_Template, 9, 4, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.forecasts);\n  }\n}\nexport class FetchDataComponent {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.forecasts = [];\n    this.url = \"\";\n    //http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\n    //  this.forecasts = result;\n    //}, error => console.error(error));\n    this.url = baseUrl;\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const wfs = yield _this.getData(_this.http, _this.url);\n        console.log(\"from outer function\");\n        console.log(wfs);\n        console.log(1);\n        _this.forecasts = wfs;\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  }\n  getData(http, baseUrl) {\n    return _asyncToGenerator(function* () {\n      try {\n        const response = yield firstValueFrom(http.get(baseUrl + 'weatherforecast'));\n        console.log(\"from inner function\");\n        console.log(response);\n        return response;\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Weather forecast\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching data from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FetchDataComponent_p_4_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(5, FetchDataComponent_table_5_Template, 13, 1, \"table\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.forecasts);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.forecasts);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";AAEA,SAASA,cAAc,QAAQ,MAAM;;;;;;ICErCC,yBAAsB;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAYrCA,0BAAuC;IACjCA,YAAmB;IAAAA,iBAAK;IAC5BA,0BAAI;IAAAA,YAA2B;IAAAA,iBAAK;IACpCA,0BAAI;IAAAA,YAA2B;IAAAA,iBAAK;IACpCA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;;;;IAH3BA,eAAmB;IAAnBA,sCAAmB;IACnBA,eAA2B;IAA3BA,8CAA2B;IAC3BA,eAA2B;IAA3BA,8CAA2B;IAC3BA,eAAsB;IAAtBA,yCAAsB;;;;;IAdhCA,gCAAkF;IAGxEA,oBAAI;IAAAA,iBAAK;IACbA,0BAAI;IAAAA,yBAAS;IAAAA,iBAAK;IAClBA,0BAAI;IAAAA,yBAAS;IAAAA,iBAAK;IAClBA,0BAAI;IAAAA,wBAAO;IAAAA,iBAAK;IAGpBA,8BAAO;IACLA,2EAKK;IACPA,iBAAQ;;;;IANmBA,gBAAY;IAAZA,0CAAY;;;ADRzC,OAAM,MAAOC,kBAAkB;EAI7BC,YAAoBC,IAAgB,EAAsBC,OAAe;IAArD,SAAI,GAAJD,IAAI;IAHxB,cAAS,GAAsB,EAAE;IACjC,QAAG,GAAW,EAAE;IAGd;IACA;IACA;IACA,IAAI,CAACE,GAAG,GAAGD,OAAO;EACpB;EAEME,QAAQ;IAAA;IAAA;MACZ,IAAI;QACF,MAAMC,GAAG,SAAS,KAAI,CAACC,OAAO,CAAC,KAAI,CAACL,IAAI,EAAE,KAAI,CAACE,GAAG,CAAC;QACnDI,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClCD,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;QAChBE,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;QACd,KAAI,CAACC,SAAS,GAAGJ,GAAG;OACrB,CACD,OAAOK,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;;IACrB;EACH;EAEMJ,OAAO,CAACL,IAAgB,EAAEC,OAAe;IAAA;MAC7C,IAAI;QACF,MAAMS,QAAQ,SAASd,cAAc,CAACI,IAAI,CAACW,GAAG,CAAoBV,OAAO,GAAG,iBAAiB,CAAC,CAAC;QAC/FK,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAClCD,OAAO,CAACC,GAAG,CAACG,QAAQ,CAAC;QACrB,OAAOA,QAAQ;OAChB,CAAC,OAAOD,KAAK,EAAE;QACd,MAAMA,KAAK;;IACZ;EACH;;AAjCWX,kBAAkB;mBAAlBA,kBAAkB,4DAIiB,UAAU;AAAA;AAJ7CA,kBAAkB;QAAlBA,kBAAkB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR/BnB,6BAAoB;MAAAA,gCAAgB;MAAAA,iBAAK;MAEzCA,yBAAG;MAAAA,0EAA0D;MAAAA,iBAAI;MAEjEA,+DAA6C;MAE7CA,wEAiBQ;;;MAnBJA,eAAgB;MAAhBA,qCAAgB;MAE6CA,eAAe;MAAfA,oCAAe","names":["firstValueFrom","i0","FetchDataComponent","constructor","http","baseUrl","url","ngOnInit","wfs","getData","console","log","forecasts","error","response","get","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Development\\AngularComponent\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts","C:\\Development\\AngularComponent\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  forecasts: WeatherForecast[] = [];\r\n  url: string = \"\";\r\n\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    //http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n    //  this.forecasts = result;\r\n    //}, error => console.error(error));\r\n    this.url = baseUrl;\r\n  }\r\n\r\n  async ngOnInit() {\r\n    try {\r\n      const wfs = await this.getData(this.http, this.url);\r\n      console.log(\"from outer function\");\r\n      console.log(wfs);\r\n      console.log(1);\r\n      this.forecasts = wfs;\r\n    }\r\n    catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  async getData(http: HttpClient, baseUrl: string): Promise<WeatherForecast[]> {\r\n    try {\r\n      const response = await firstValueFrom(http.get<WeatherForecast[]>(baseUrl + 'weatherforecast'));\r\n      console.log(\"from inner function\");\r\n      console.log(response);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!forecasts\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts\">\r\n  <thead>\r\n    <tr>\r\n      <th>Date</th>\r\n      <th>Temp. (C)</th>\r\n      <th>Temp. (F)</th>\r\n      <th>Summary</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let forecast of forecasts\">\r\n      <td>{{ forecast.date }}</td>\r\n      <td>{{ forecast.temperatureC }}</td>\r\n      <td>{{ forecast.temperatureF }}</td>\r\n      <td>{{ forecast.summary }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}