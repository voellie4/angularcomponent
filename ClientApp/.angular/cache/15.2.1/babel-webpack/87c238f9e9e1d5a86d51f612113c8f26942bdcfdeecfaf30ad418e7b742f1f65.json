{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class HasPermissionDirective {\n  set hasPermission(val) {\n    this._permissions = val;\n    this.updateView();\n  }\n  constructor(element, templateRef, viewContainer) {\n    this.element = element;\n    this.templateRef = templateRef;\n    this.viewContainer = viewContainer;\n    this._permissions = [];\n  }\n  updateView() {\n    if (this.checkPermission()) {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainer.clear();\n    }\n  }\n  checkPermission() {\n    return this._permissions.some(p => p % 2 == 0);\n  }\n}\nHasPermissionDirective.ɵfac = function HasPermissionDirective_Factory(t) {\n  return new (t || HasPermissionDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n};\nHasPermissionDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: HasPermissionDirective,\n  selectors: [[\"\", \"hasPermission\", \"\"]],\n  inputs: {\n    hasPermission: \"hasPermission\"\n  }\n});","map":{"version":3,"mappings":";AAWA,OAAM,MAAOA,sBAAsB;EACjC,IACIC,aAAa,CAACC,GAAQ;IACxB,IAAI,CAACC,YAAY,GAAGD,GAAG;IACvB,IAAI,CAACE,UAAU,EAAE;EACnB;EAIAC,YACUC,OAAmB,EACnBC,WAA6B,EAC7BC,aAA+B;IAF/B,YAAO,GAAPF,OAAO;IACP,gBAAW,GAAXC,WAAW;IACX,kBAAa,GAAbC,aAAa;IALf,iBAAY,GAAG,EAAE;EAMrB;EAEIJ,UAAU;IAChB,IAAI,IAAI,CAACK,eAAe,EAAE,EAAE;MAC1B,IAAI,CAACD,aAAa,CAACE,kBAAkB,CAAC,IAAI,CAACH,WAAW,CAAC;KACxD,MAAM;MACL,IAAI,CAACC,aAAa,CAACG,KAAK,EAAE;;EAE9B;EAEQF,eAAe;IACrB,OAAO,IAAI,CAACN,YAAY,CAACS,IAAI,CAACC,CAAC,IAAIA,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;EAChD;;AAzBWb,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAc;EAAAC;IAAAd;EAAA;AAAA","names":["HasPermissionDirective","hasPermission","val","_permissions","updateView","constructor","element","templateRef","viewContainer","checkPermission","createEmbeddedView","clear","some","p","selectors","inputs"],"sourceRoot":"","sources":["C:\\Development\\AngularComponent\\ClientApp\\src\\app\\directives\\has-permission.directive.ts"],"sourcesContent":["import {\r\n  Directive,\r\n  ElementRef,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n  Input\r\n} from \"@angular/core\";\r\n\r\n@Directive({\r\n  selector: \"[hasPermission]\"\r\n})\r\nexport class HasPermissionDirective {\r\n  @Input()\r\n  set hasPermission(val: any) {\r\n    this._permissions = val;\r\n    this.updateView();\r\n  }\r\n\r\n  private _permissions = [];\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private templateRef: TemplateRef<any>,\r\n    private viewContainer: ViewContainerRef\r\n  ) { }\r\n\r\n  private updateView() {\r\n    if (this.checkPermission()) {\r\n      this.viewContainer.createEmbeddedView(this.templateRef);\r\n    } else {\r\n      this.viewContainer.clear();\r\n    }\r\n  }\r\n\r\n  private checkPermission(): boolean {\r\n    return this._permissions.some(p => p % 2 == 0);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}